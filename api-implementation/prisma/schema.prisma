// Prisma schema for FlahaSoil database
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model for authentication and subscription management
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String   // In production, this will be hashed
  tier      String   @default("FREE") // FREE, PROFESSIONAL, ENTERPRISE
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Subscription information
  subscription   Subscription?

  // Usage tracking
  usageRecords   UsageRecord[]

  // Soil analysis history
  soilAnalyses   SoilAnalysis[]

  @@map("users")
}

// Subscription model for billing
model Subscription {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  tier              String   // FREE, PROFESSIONAL, ENTERPRISE
  status            String   @default("ACTIVE") // ACTIVE, CANCELED, PAST_DUE, UNPAID

  // Billing information
  stripeCustomerId      String?
  stripeSubscriptionId  String?
  stripePriceId         String?

  // Subscription period
  currentPeriodStart    DateTime
  currentPeriodEnd      DateTime

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("subscriptions")
}

// Usage tracking for analytics and billing
model UsageRecord {
  id        String   @id @default(cuid())
  userId    String?  // Nullable for anonymous users
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)

  // Usage details
  endpoint  String   // e.g., "soil/analyze", "soil/recommendations"
  ipAddress String?
  userAgent String?

  // Request data for analytics (stored as text in SQLite)
  requestData String?

  timestamp DateTime @default(now())

  @@map("usage_records")
}

// Soil analysis history for users
model SoilAnalysis {
  id        String   @id @default(cuid())
  userId    String?  // Nullable for anonymous users
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)

  // Input parameters
  sand          Float
  clay          Float
  silt          Float
  organicMatter Float  @default(2.5)
  densityFactor Float  @default(1.0)

  // Calculated results
  fieldCapacity         Float
  wiltingPoint         Float
  plantAvailableWater  Float
  saturation           Float
  saturatedConductivity Float
  textureClass         String

  // Metadata
  calculationSource String  // "api" or "client-side"
  ipAddress        String?

  createdAt DateTime @default(now())

  @@map("soil_analyses")
  @@index([userId, createdAt])
  @@index([createdAt])
}


